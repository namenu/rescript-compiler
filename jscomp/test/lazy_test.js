// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Mt = require("./mt.js");
var Lazy = require("../../lib/js/lazy.js");
var CamlinternalLazy = require("../../lib/js/camlinternalLazy.js");

var u = {
  contents: 3
};

var v = CamlinternalLazy.from_fun(function () {
      u.contents = 32;
    });

function lazy_test(param) {
  var h = u.contents;
  CamlinternalLazy.force(v);
  var g = u.contents;
  return [
          h,
          g
        ];
}

var u_v = {
  contents: 0
};

var u$1 = CamlinternalLazy.from_fun(function () {
      u_v.contents = 2;
    });

CamlinternalLazy.force(u$1);

var exotic = CamlinternalLazy.force;

var l_from_fun = CamlinternalLazy.from_fun(function () {
      return 3;
    });

var forward_test = CamlinternalLazy.from_fun(function () {
      var u = 3;
      u = u + 1 | 0;
      return u;
    });

var f005 = CamlinternalLazy.from_fun(function () {
      return 6;
    });

var f006 = CamlinternalLazy.from_fun(function () {
      return function (param) {
        return 3;
      };
    });

var f007 = CamlinternalLazy.from_fun(function () {
      throw {
            RE_EXN_ID: "Not_found",
            Error: new Error()
          };
    });

var f008 = CamlinternalLazy.from_fun(function () {
      console.log("hi");
      throw {
            RE_EXN_ID: "Not_found",
            Error: new Error()
          };
    });

var a2 = CamlinternalLazy.from_val;

var a3 = CamlinternalLazy.from_val(3);

var a4 = CamlinternalLazy.from_val(3);

var a5 = CamlinternalLazy.from_val(undefined);

var a6 = CamlinternalLazy.from_val();

var a7 = CamlinternalLazy.force(a5);

var a8 = CamlinternalLazy.force(a6);

Mt.from_pair_suites("Lazy_test", {
      hd: [
        "simple",
        (function (param) {
            return {
                    TAG: "Eq",
                    _0: lazy_test(),
                    _1: [
                      3,
                      32
                    ]
                  };
          })
      ],
      tl: {
        hd: [
          "lazy_force",
          (function (param) {
              return {
                      TAG: "Eq",
                      _0: u_v.contents,
                      _1: 2
                    };
            })
        ],
        tl: {
          hd: [
            "lazy_from_fun",
            (function (param) {
                return {
                        TAG: "Eq",
                        _0: CamlinternalLazy.force(l_from_fun),
                        _1: 3
                      };
              })
          ],
          tl: {
            hd: [
              "lazy_from_val",
              (function (param) {
                  return {
                          TAG: "Eq",
                          _0: CamlinternalLazy.force(CamlinternalLazy.from_val(3)),
                          _1: 3
                        };
                })
            ],
            tl: {
              hd: [
                "lazy_from_val2",
                (function (param) {
                    return {
                            TAG: "Eq",
                            _0: CamlinternalLazy.force(CamlinternalLazy.force(CamlinternalLazy.from_val(CamlinternalLazy.from_fun(function () {
                                              return 3;
                                            })))),
                            _1: 3
                          };
                  })
              ],
              tl: {
                hd: [
                  "lazy_from_val3",
                  (function (param) {
                      debugger;
                      return {
                              TAG: "Eq",
                              _0: CamlinternalLazy.force(CamlinternalLazy.force(CamlinternalLazy.from_val(forward_test))),
                              _1: 4
                            };
                    })
                ],
                tl: {
                  hd: [
                    "lazy_test.res",
                    (function (param) {
                        return {
                                TAG: "Eq",
                                _0: a3,
                                _1: a4
                              };
                      })
                  ],
                  tl: {
                    hd: [
                      "lazy_test.res",
                      (function (param) {
                          return {
                                  TAG: "Eq",
                                  _0: a7,
                                  _1: undefined
                                };
                        })
                    ],
                    tl: {
                      hd: [
                        "lazy_test.res",
                        (function (param) {
                            return {
                                    TAG: "Eq",
                                    _0: a8,
                                    _1: undefined
                                  };
                          })
                      ],
                      tl: {
                        hd: [
                          "File \"lazy_test.res\", line 95, characters 7-14",
                          (function (param) {
                              return {
                                      TAG: "Ok",
                                      _0: Lazy.is_val(CamlinternalLazy.from_val(3))
                                    };
                            })
                        ],
                        tl: {
                          hd: [
                            "File \"lazy_test.res\", line 96, characters 7-14",
                            (function (param) {
                                return {
                                        TAG: "Ok",
                                        _0: !Lazy.is_val(CamlinternalLazy.from_fun(function () {
                                                  throw {
                                                        RE_EXN_ID: "Not_found",
                                                        Error: new Error()
                                                      };
                                                }))
                                      };
                              })
                          ],
                          tl: /* [] */0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    });

exports.v = v;
exports.lazy_test = lazy_test;
exports.u_v = u_v;
exports.u = u$1;
exports.exotic = exotic;
exports.l_from_fun = l_from_fun;
exports.forward_test = forward_test;
exports.f005 = f005;
exports.f006 = f006;
exports.f007 = f007;
exports.f008 = f008;
exports.a2 = a2;
exports.a3 = a3;
exports.a4 = a4;
exports.a5 = a5;
exports.a6 = a6;
exports.a7 = a7;
exports.a8 = a8;
/*  Not a pure module */
